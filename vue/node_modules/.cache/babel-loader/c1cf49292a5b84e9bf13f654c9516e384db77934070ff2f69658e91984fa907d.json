{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'UserRegister',\n  data() {\n    return {\n      userName: '',\n      userEmail: '',\n      userPassword: '',\n      repeatPassword: ''\n    };\n  },\n  computed: {\n    passwordMatchMessage() {\n      if (!this.userPassword && !this.repeatPassword) {\n        return '';\n      }\n      return this.userPassword === this.repeatPassword ? 'Password Correct' : 'Password Inorrect!';\n    },\n    passwordMatchClass() {\n      return this.userPassword === this.repeatPassword ? 'text-success' : 'text-danger';\n    }\n  },\n  methods: {\n    async checkEmailDuplicate() {\n      try {\n        const response = await axios.post('/api/user/check-email', {\n          uemail: this.userEmail\n        });\n        if (response.data) {\n          alert('This email is already in use.');\n        } else {\n          alert('This email is available.');\n        }\n      } catch (error) {\n        alert('Error checking email: ' + error.message);\n      }\n    },\n    async registerUser() {\n      if (this.userPassword !== this.repeatPassword) {\n        alert('Passwords do not match.');\n        return;\n      }\n      try {\n        const response = await axios.post('/api/user/register', {\n          uname: this.userName,\n          uemail: this.userEmail,\n          upassword: this.userPassword\n        });\n        if (response.status === 200) {\n          alert('Registration successful!');\n          // ȸ������ ���� �� �����̷�Ʈ\n          this.$router.push({\n            name: 'UserLogin'\n          });\n        } else {\n          alert('Registration failed: ' + response.data);\n        }\n      } catch (error) {\n        alert('Registration failed: ' + error.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","userName","userEmail","userPassword","repeatPassword","computed","passwordMatchMessage","passwordMatchClass","methods","checkEmailDuplicate","response","post","uemail","alert","error","message","registerUser","uname","upassword","status","$router","push"],"sources":["D:\\BizwebFrontEnd\\vue\\src\\components\\User\\UserRegister.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      <div class=\"card o-hidden border-0 shadow-lg my-5\">\r\n        <div class=\"card-body p-0\">\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-5 d-none d-lg-block bg-register-image\"></div>\r\n            <div class=\"col-lg-7\">\r\n              <div class=\"p-5\">\r\n                <div class=\"text-center\">\r\n                  <h1 class=\"h4 text-gray-900 mb-4\">Create an Account!</h1>\r\n                </div>\r\n                <form class=\"user\" @submit.prevent=\"registerUser\">\r\n                  <div class=\"form-group row\">\r\n                    <div class=\"col-sm-15 mb-3 mb-sm-0\">\r\n                      <input\r\n                        type=\"text\"\r\n                        class=\"form-control form-control-user\"\r\n                        v-model=\"userName\"\r\n                        placeholder=\"User Name\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group row\">\r\n                    <div class=\"col-sm-8\">\r\n                      <input\r\n                        type=\"email\"\r\n                        class=\"form-control form-control-user\"\r\n                        v-model=\"userEmail\"\r\n                        placeholder=\"Email Address\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div class=\"col-sm-4\">\r\n                      <button\r\n                        type=\"button\"\r\n                        class=\"btn btn-secondary btn-user btn-block\"\r\n                        @click=\"checkEmailDuplicate\"\r\n                      >\r\n                        Check Duplicate\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group row\">\r\n                    <div class=\"col-sm-6 mb-3 mb-sm-0\">\r\n                      <input\r\n                        type=\"password\"\r\n                        class=\"form-control form-control-user\"\r\n                        v-model=\"userPassword\"\r\n                        placeholder=\"Password\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div class=\"col-sm-6\">\r\n                      <input\r\n                        type=\"password\"\r\n                        class=\"form-control form-control-user\"\r\n                        v-model=\"repeatPassword\"\r\n                        placeholder=\"Repeat Password\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group row\">\r\n                    <div class=\"col-sm-12\">\r\n                      <p v-if=\"passwordMatchMessage\" :class=\"passwordMatchClass\">{{ passwordMatchMessage }}</p>\r\n                    </div>\r\n                  </div>\r\n                  <button type=\"submit\" class=\"btn btn-primary btn-user btn-block\">Register Account</button>\r\n                  <hr />\r\n                  <a href=\"index.html\" class=\"btn btn-google btn-user btn-block\">\r\n                    <i class=\"fab fa-google fa-fw\"></i> Register with Google\r\n                  </a>\r\n                  <a href=\"index.html\" class=\"btn btn-facebook btn-user btn-block\">\r\n                    <i class=\"fab fa-facebook-f fa-fw\"></i> Register with Facebook\r\n                  </a>\r\n                </form>\r\n                <hr />\r\n                <div class=\"text-center\">\r\n                  <a class=\"small\" href=\"forgot-password.html\">Forgot Password?</a>\r\n                </div>\r\n                <div class=\"text-center\">\r\n                  <a class=\"small\" href=\"login.html\">Already have an account? Login!</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    name: 'UserRegister',\r\n    data() {\r\n      return {\r\n        userName: '',\r\n        userEmail: '',\r\n        userPassword: '',\r\n        repeatPassword: ''\r\n      };\r\n    },\r\n    computed: {\r\n    passwordMatchMessage() {\r\n      if (!this.userPassword && !this.repeatPassword) {\r\n        return '';\r\n      }\r\n      return this.userPassword === this.repeatPassword\r\n        ? 'Password Correct'\r\n        : 'Password Inorrect!';\r\n    },\r\n    passwordMatchClass() {\r\n      return this.userPassword === this.repeatPassword ? 'text-success' : 'text-danger';\r\n    }\r\n  },\r\n    methods: {\r\n      async checkEmailDuplicate() {\r\n        try {\r\n          const response = await axios.post('/api/user/check-email', { uemail: this.userEmail });\r\n          if (response.data) {\r\n            alert('This email is already in use.');\r\n          } else {\r\n            alert('This email is available.');\r\n          }\r\n        } catch (error) {\r\n          alert('Error checking email: ' + error.message);\r\n        }\r\n      },\r\n      async registerUser() {\r\n        if (this.userPassword !== this.repeatPassword) {\r\n          alert('Passwords do not match.');\r\n          return;\r\n        }\r\n        try {\r\n          const response = await axios.post('/api/user/register', {\r\n            uname: this.userName,\r\n            uemail: this.userEmail,\r\n            upassword: this.userPassword\r\n          });\r\n          if (response.status === 200) {\r\n            alert('Registration successful!');\r\n          // ȸ������ ���� �� �����̷�Ʈ\r\n          this.$router.push({ name: 'UserLogin' });\r\n          } else {\r\n            alert('Registration failed: ' + response.data);\r\n          }\r\n        } catch (error) {\r\n          alert('Registration failed: ' + error.message);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  @import '../../assets/startbootstrap-sb-admin-2-gh-pages/css/sb-admin-2.min.css';\r\n  @import '../../assets/startbootstrap-sb-admin-2-gh-pages/vendor/fontawesome-free/css/all.min.css';\r\n  .text-success {\r\n    color: #28a745 !important;\r\n  }\r\n  .text-danger {\r\n    color: #dc3545 !important;\r\n  }\r\n  </style>\r\n  "],"mappings":";AA4FE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,EAAE;MACbC,YAAY,EAAE,EAAE;MAChBC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACVC,oBAAoBA,CAAA,EAAG;MACrB,IAAI,CAAC,IAAI,CAACH,YAAW,IAAK,CAAC,IAAI,CAACC,cAAc,EAAE;QAC9C,OAAO,EAAE;MACX;MACA,OAAO,IAAI,CAACD,YAAW,KAAM,IAAI,CAACC,cAAa,GAC3C,kBAAiB,GACjB,oBAAoB;IAC1B,CAAC;IACDG,kBAAkBA,CAAA,EAAG;MACnB,OAAO,IAAI,CAACJ,YAAW,KAAM,IAAI,CAACC,cAAa,GAAI,cAAa,GAAI,aAAa;IACnF;EACF,CAAC;EACCI,OAAO,EAAE;IACP,MAAMC,mBAAmBA,CAAA,EAAG;MAC1B,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMZ,KAAK,CAACa,IAAI,CAAC,uBAAuB,EAAE;UAAEC,MAAM,EAAE,IAAI,CAACV;QAAU,CAAC,CAAC;QACtF,IAAIQ,QAAQ,CAACV,IAAI,EAAE;UACjBa,KAAK,CAAC,+BAA+B,CAAC;QACxC,OAAO;UACLA,KAAK,CAAC,0BAA0B,CAAC;QACnC;MACF,EAAE,OAAOC,KAAK,EAAE;QACdD,KAAK,CAAC,wBAAuB,GAAIC,KAAK,CAACC,OAAO,CAAC;MACjD;IACF,CAAC;IACD,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI,IAAI,CAACb,YAAW,KAAM,IAAI,CAACC,cAAc,EAAE;QAC7CS,KAAK,CAAC,yBAAyB,CAAC;QAChC;MACF;MACA,IAAI;QACF,MAAMH,QAAO,GAAI,MAAMZ,KAAK,CAACa,IAAI,CAAC,oBAAoB,EAAE;UACtDM,KAAK,EAAE,IAAI,CAAChB,QAAQ;UACpBW,MAAM,EAAE,IAAI,CAACV,SAAS;UACtBgB,SAAS,EAAE,IAAI,CAACf;QAClB,CAAC,CAAC;QACF,IAAIO,QAAQ,CAACS,MAAK,KAAM,GAAG,EAAE;UAC3BN,KAAK,CAAC,0BAA0B,CAAC;UACnC;UACA,IAAI,CAACO,OAAO,CAACC,IAAI,CAAC;YAAEtB,IAAI,EAAE;UAAY,CAAC,CAAC;QACxC,OAAO;UACLc,KAAK,CAAC,uBAAsB,GAAIH,QAAQ,CAACV,IAAI,CAAC;QAChD;MACF,EAAE,OAAOc,KAAK,EAAE;QACdD,KAAK,CAAC,uBAAsB,GAAIC,KAAK,CAACC,OAAO,CAAC;MAChD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}